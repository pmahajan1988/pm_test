{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "file_campaign",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as double,",
				"          Column_7 as string,",
				"          Column_8 as double,",
				"          Column_9 as string,",
				"          Column_10 as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     skipLines: 1) ~> source1",
				"select1 derive(new_Revenue = toDecimal(replace(concat(toString(RevenuePart1), toString(Revenue)), '\\\\', ''), 10, 2, '$###,###.##'),",
				"          new_RevenueTarget = toDecimal(replace(concat(toString(RevenueTargetPart1), toString(RevenueTarget)), '\\\\', ''), 10, 2, '$###,###.##')) ~> derivedColumn1",
				"source1 select(mapColumn(",
				"          Region = Column_1,",
				"          Country = Column_2,",
				"          ProductCategory = Column_3,",
				"          CampaignName = Column_4,",
				"          RevenuePart1 = Column_5,",
				"          Revenue = Column_6,",
				"          RevenueTargetPart1 = Column_7,",
				"          RevenueTarget = Column_8,",
				"          City = Column_9,",
				"          State = Column_10",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}